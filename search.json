[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 blueskyR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/demo.html","id":"authentification","dir":"Articles","previous_headings":"","what":"Authentification","title":"demo","text":"bluesky account used authenticate API. bluesky handle password stored environment variables bluesky_id bluesky_pwd.","code":"handle <- Sys.getenv(\"bluesky_id\") password <- Sys.getenv(\"bluesky_pwd\")  infos <- create_session(handle, password) token <- infos$access_jwt"},{"path":[]},{"path":"/articles/demo.html","id":"make-a-simple-request","dir":"Articles","previous_headings":"Retrieve posts","what":"Make a simple request","title":"demo","text":"","code":"posts <- search_posts(   keyword = \"covid19\",   access_jwt = token,   number_of_posts_per_request = 100,   since = NULL,   until = NULL )"},{"path":"/articles/demo.html","id":"analyze-the-content-of-the-posts","dir":"Articles","previous_headings":"Retrieve posts > Make a simple request","what":"Analyze the content of the posts","title":"demo","text":"extract_many_posts_elements function extracts elements posts. calls extract_post_elements post, calls many functions extract elements post.","code":"posts_content <- posts$results$posts elements <- extract_many_posts_elements(posts_content) elements[[1]] extract_post_elements <- function(post) {   list(     author_infos = extract_post_author_infos(post),     text = extract_post_text(post),     created_at = extract_post_created_at(post),     langs = extract_post_langs(post),     hashtags = extract_post_hashtags(post),     url = create_post_url(post),     id = create_post_id(post)   ) }"},{"path":"/articles/demo.html","id":"automatic-pagination-based-on-dates","dir":"Articles","previous_headings":"Retrieve posts","what":"Automatic pagination based on dates","title":"demo","text":"","code":"posts <- search_posts_paginated(   keyword = \"covid19\",   access_jwt = token,   until = \"2025-07-14T00:00:00Z\",   since = NULL )"},{"path":"/articles/demo.html","id":"analyze-the-content-of-the-posts-1","dir":"Articles","previous_headings":"Retrieve posts > Automatic pagination based on dates","what":"Analyze the content of the posts","title":"demo","text":"","code":"posts_content <- posts$posts elements <- extract_many_posts_elements(posts_content) elements[[1]]"},{"path":"/articles/demo.html","id":"data-provided-in-the-package","dir":"Articles","previous_headings":"","what":"Data provided in the package","title":"demo","text":"","code":"posts <- jsonlite::read_json(system.file(package = \"blueskyR\", \"posts.json\")) elements <- extract_many_posts_elements(posts) elements[[1]] #> $author_infos #> $author_infos$author_handle #> $author_infos$author_handle[[1]] #> [1] \"ghostwarrior.bsky.social\" #>  #>  #> $author_infos$author_did #> $author_infos$author_did[[1]] #> [1] \"did:plc:f4g5ztrxrrfk4m66hqvah5hx\" #>  #>  #> $author_infos$created_at #> $author_infos$created_at[[1]] #> [1] \"2023-11-16T08:36:35.624Z\" #>  #>  #>  #> $text #> $text[[1]] #> [1] \"@uriebay.bsky.social @beyerstein.bsky.social @tomlevenson.bsky.social @anniegirl.bsky.social @doloresquintana.bsky.social @merlinofcanada.bsky.social @maej43.bsky.social Because of course they were. üôÑ  #CovidVaccines #Covid19 üò∑\" #>  #>  #> $created_at #> $created_at[[1]] #> [1] \"2025-07-13T23:45:07.013Z\" #>  #>  #> $langs #> [1] \"en\" #>  #> $hashtags #> [1] \"CovidVaccines\" \"Covid19\"       #>  #> $url #> [1] \"https://bsky.app/profile/did:plc:f4g5ztrxrrfk4m66hqvah5hx/post/3ltv2l2mobs2c\" #>  #> $id #> [1] \"a1dc81e6872212e89457e801fa234bfb\""},{"path":"/articles/demo.html","id":"search-topic","dir":"Articles","previous_headings":"","what":"Search topic","title":"demo","text":"schema explaining logic behind search topic function available file inst/schema/search_topic.excalidraw. Please download file drag drop browser excalidraw.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yohann Mansiaux. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mansiaux Y (2025). blueskyR: R package interact Bluesky API. R package version 0.0.1.","code":"@Manual{,   title = {blueskyR: A R package to interact with the Bluesky API},   author = {Yohann Mansiaux},   year = {2025},   note = {R package version 0.0.1}, }"},{"path":"/reference/extract_elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract elements from a post ‚Äî extract_post_elements","title":"Extract elements from a post ‚Äî extract_post_elements","text":"Extract elements post Extract elements many posts Extract author information post Extract author information many posts Extract text post Extract text many posts Extract created post Extract created many posts Extract langs post Extract langs many posts Extract hashtags post Extract hashtags many posts Create post URL Create post URL many posts Create post ID Create post ID many posts","code":""},{"path":"/reference/extract_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract elements from a post ‚Äî extract_post_elements","text":"","code":"extract_post_elements(post)  extract_many_posts_elements(posts)  extract_post_author_infos(post)  extract_many_posts_author_infos(posts)  extract_post_text(post)  extract_many_posts_text(posts)  extract_post_created_at(post)  extract_many_posts_created_at(posts)  extract_post_langs(post)  extract_many_posts_langs(posts)  extract_post_hashtags(post)  extract_many_posts_hashtags(posts)  create_post_url(post)  extract_many_posts_url(posts)  create_post_id(post)  extract_many_posts_id(posts)"},{"path":"/reference/extract_elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract elements from a post ‚Äî extract_post_elements","text":"post post object posts list post objects","code":""},{"path":"/reference/extract_elements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract elements from a post ‚Äî extract_post_elements","text":"list elements list lists elements list author handle, , created list lists author handle, , created text post list texts created post list created ats langs post list langs list hashtags list lists hashtags URL post list URLs ID post list IDs","code":""},{"path":"/reference/extract_elements_bskyr.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract elements from many posts ‚Äî extract_many_posts_elements_bskyr","title":"Extract elements from many posts ‚Äî extract_many_posts_elements_bskyr","text":"Extract elements many posts Extract author information many posts Extract text many posts Extract created many posts Extract langs many posts Extract hashtags many posts Create post URL Create post URL many posts Create post ID many posts","code":""},{"path":"/reference/extract_elements_bskyr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract elements from many posts ‚Äî extract_many_posts_elements_bskyr","text":"","code":"extract_many_posts_elements_bskyr(posts)  extract_many_posts_author_infos_bskyr(posts)  extract_many_posts_text_bskyr(posts)  extract_many_posts_created_at_bskyr(posts)  extract_many_posts_langs_bskyr(posts)  extract_many_posts_hashtags_bskyr(posts)  create_post_url_bskyr(post_uri, author_did)  extract_many_posts_url_bskyr(posts)  extract_many_posts_id_bskyr(posts)"},{"path":"/reference/extract_elements_bskyr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract elements from many posts ‚Äî extract_many_posts_elements_bskyr","text":"posts list post objects post_uri URI post author_did author","code":""},{"path":"/reference/extract_elements_bskyr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract elements from many posts ‚Äî extract_many_posts_elements_bskyr","text":"list lists elements list lists author handle, , created list texts list created ats list langs list lists hashtags URL post list URLs list IDs","code":""},{"path":"/reference/format_date_for_bluesky.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert date or datetime to ISO 8601 format for Bluesky API ‚Äî format_date_for_bluesky","title":"Convert date or datetime to ISO 8601 format for Bluesky API ‚Äî format_date_for_bluesky","text":"Convert date datetime ISO 8601 format Bluesky API","code":""},{"path":"/reference/format_date_for_bluesky.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert date or datetime to ISO 8601 format for Bluesky API ‚Äî format_date_for_bluesky","text":"","code":"format_date_for_bluesky(date_input, timezone = \"UTC\", include_time = TRUE)"},{"path":"/reference/format_date_for_bluesky.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert date or datetime to ISO 8601 format for Bluesky API ‚Äî format_date_for_bluesky","text":"date_input date datetime object. Can : Date object (e.g., .Date(\"2024-01-01\")) POSIXct/POSIXlt object (e.g., .POSIXct(\"2024-01-01 12:00:00\")) Character string can parsed date/datetime Numeric value representing seconds since Unix epoch timezone Timezone output. Defaults \"UTC\" Bluesky API compatibility. include_time Whether include time output. FALSE, time set 00:00:00.","code":""},{"path":"/reference/format_date_for_bluesky.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert date or datetime to ISO 8601 format for Bluesky API ‚Äî format_date_for_bluesky","text":"Character string ISO 8601 format (e.g., \"2024-01-01T12:00:00Z\")","code":""},{"path":"/reference/format_date_for_bluesky.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert date or datetime to ISO 8601 format for Bluesky API ‚Äî format_date_for_bluesky","text":"","code":"# Date only format_date_for_bluesky(\"2024-01-01\") #> [1] \"2024-01-01T00:00:00Z\" format_date_for_bluesky(as.Date(\"2024-01-01\")) #> [1] \"2024-01-01T00:00:00Z\"  # Date and time format_date_for_bluesky(\"2024-01-01 12:30:45\") #> [1] \"2024-01-01T12:30:45Z\" format_date_for_bluesky(as.POSIXct(\"2024-01-01 12:30:45\")) #> [1] \"2024-01-01T12:30:45Z\"  # Unix timestamp format_date_for_bluesky(1704067200) #> [1] \"2024-01-01T00:00:00Z\"  # Current time format_date_for_bluesky(Sys.time()) #> [1] \"2025-07-18T11:24:40Z\""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator ‚Äî %>%","title":"Pipe operator ‚Äî %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator ‚Äî %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator ‚Äî %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator ‚Äî %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/search_posts.html","id":null,"dir":"Reference","previous_headings":"","what":"Search posts for a given keyword ‚Äî search_posts","title":"Search posts for a given keyword ‚Äî search_posts","text":"Search posts given keyword","code":""},{"path":"/reference/search_posts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search posts for a given keyword ‚Äî search_posts","text":"","code":"search_posts(   keyword,   access_jwt,   cursor = NULL,   sort = \"latest\",   since = NULL,   until = NULL,   number_of_posts_per_request = 100,   search_url = \"https://bsky.social/xrpc/app.bsky.feed.searchPosts\",   max_retries = 20,   delay_between_retries = NULL,   errors_for_retries = c(420, 500, 503),   verbose = TRUE )"},{"path":"/reference/search_posts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search posts for a given keyword ‚Äî search_posts","text":"keyword Keyword search access_jwt Access token cursor Optional cursor resume specific point sort Sort order search since Start date search End date search number_of_posts_per_request Number posts retrieve per request search_url Search URL max_retries Maximum number retries delay_between_retries Delay retries errors_for_retries Errors retries verbose Whether print progress messages","code":""},{"path":"/reference/search_posts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search posts for a given keyword ‚Äî search_posts","text":"List posts next cursor resumption","code":""},{"path":"/reference/search_posts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search posts for a given keyword ‚Äî search_posts","text":"can find information Bluesky API : https://docs.bsky.app/docs/api/app-bsky-feed-search-posts Additionnaly information \"post\" object available : https://atproto.blue/en/latest/atproto/atproto_client.models.app.bsky.feed.defs.html#atproto_client.models.app.bsky.feed.defs.PostView","code":""},{"path":"/reference/search_posts_paginated.html","id":null,"dir":"Reference","previous_headings":"","what":"Search posts with automatic pagination using purrr::possibly for robustness ‚Äî search_posts_paginated","title":"Search posts with automatic pagination using purrr::possibly for robustness ‚Äî search_posts_paginated","text":"Search posts automatic pagination using purrr::possibly robustness","code":""},{"path":"/reference/search_posts_paginated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search posts with automatic pagination using purrr::possibly for robustness ‚Äî search_posts_paginated","text":"","code":"search_posts_paginated(   keyword,   access_jwt,   max_posts = NULL,   until = NULL,   since = NULL,   sort = \"latest\",   number_of_posts_per_request = 100,   search_url = \"https://bsky.social/xrpc/app.bsky.feed.searchPosts\",   max_retries = 20,   errors_for_retries = c(420, 500, 503),   verbose = TRUE,   delay_between_requests = 0.5,   max_consecutive_failures = 5,   otherwise = NULL )"},{"path":"/reference/search_posts_paginated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search posts with automatic pagination using purrr::possibly for robustness ‚Äî search_posts_paginated","text":"keyword Keyword search access_jwt Access token max_posts Maximum number posts retrieve End date search since Start date search sort Sort order search number_of_posts_per_request Number posts retrieve per request search_url Search URL max_retries Maximum number retries errors_for_retries Errors retries verbose Whether print progress messages delay_between_requests Delay requests avoid rate limiting max_consecutive_failures Maximum number consecutive failures stopping otherwise Value return request fails (default: NULL)","code":""},{"path":"/reference/search_posts_paginated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search posts with automatic pagination using purrr::possibly for robustness ‚Äî search_posts_paginated","text":"List posts final cursor","code":""},{"path":"/reference/search_posts_paginated.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search posts with automatic pagination using purrr::possibly for robustness ‚Äî search_posts_paginated","text":"function automatically handles pagination retrieve multiple pages results. uses purrr::possibly handle request failures gracefully, allowing process continue even individual requests fail. can find information Bluesky API : https://docs.bsky.app/docs/api/app-bsky-feed-search-posts","code":""},{"path":"/reference/session.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bearer token ‚Äî create_session","title":"Get bearer token ‚Äî create_session","text":"Get bearer token Refresh session Get token","code":""},{"path":"/reference/session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bearer token ‚Äî create_session","text":"","code":"create_session(   handle = Sys.getenv(\"bluesky_id\"),   password = Sys.getenv(\"bluesky_pwd\"),   login_url = \"https://bsky.social/xrpc/com.atproto.server.createSession\" )  refresh_session(   refresh_token,   refresh_url = \"https://bsky.social/xrpc/com.atproto.server.refreshSession\" )  get_token()"},{"path":"/reference/session.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bearer token ‚Äî create_session","text":"handle Bluesky handle password Bluesky password login_url Bluesky login URL refresh_token Refresh token refresh_url Bluesky refresh URL","code":""},{"path":"/reference/session.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get bearer token ‚Äî create_session","text":"List access_jwt List access_jwt Token","code":""},{"path":"/reference/session.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get bearer token ‚Äî create_session","text":"can find information Bluesky API : https://docs.bsky.app/docs/api/com-atproto-server-create-session","code":""},{"path":"/reference/session.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get bearer token ‚Äî create_session","text":"","code":"if (FALSE) { # \\dontrun{ create_session() } # }"}]
